===============================
APサーバへのデプロイ・起動手順
===============================

.. APサーバの設定
.. ===============
..
.. WebOTX の設定
.. --------------
..
.. WebOTX を使用する場合、セキュリティポリシの追加が必要です。
..
.. 動作させるドメインの config/server.policy に以下の設定を
.. 追加してください。
..
..  ::
..
..    grant {
..      permission java.lang.RuntimePermission "createClassLoader";
..      permission java.lang.RuntimePermission "getenv.*";
..      permission java.lang.RuntimePermission "defineClassInPackage.*";
..      permission java.security.AllPermission;
..    };


APサーバへのデプロイ
=====================

アプリケーションサーバに WAR ファイルをデプロイします。
以下は /opt/tomcat8 以下に Tomcat8 をインストールした場合の例です。

::

 sudo /bin/rm -rf /opt/tomcat8/webapps/api/
 sudo cp api.war /opt/tomcat8/webapps/

 sudo /bin/rm -rf /opt/tomcat8/webapps/console/
 sudo cp console.war /opt/tomcat8/webapps/

起動
====

設定したデータベース (MongoDB)を起動しておく必要があります。

ブラウザからサーバにアクセスして、アプリケーションを利用します。

Tomcat の場合、デベロッパーコンソールの URL は http://localhost:8080/console
、API は http://localhost:8080/api となります。


コンテキストパスを変更したい場合
=================================

コンテキストパスを /api や /console 以外に設定したい場合の例を示します。

.. attention:: 

  以下の例は Tomcat 固有です。他APサーバを使用する場合は、APサーバのマニュアルをご参照ください。

まず WAR ファイルを適当なディレクトリに展開します。
ただし、${CATALINA_HOME}/webapps ディレクトリは避けて下さい。

次に、${CATALINA_HOME}/conf/Cataline/localhost/ ディレクトリに
コンテキストXMLファイルを作成します。

コンテキストXMLファイルのファイル名は、コンテキストパス名 + .xmlとします。
コンテキストパスがサブディレクトリを含む場合は、'/' を '#' に置換します。
(例: コンテキストパスが /some/path/api の場合は some#path#api.xml とする)

ファイル内容は以下のように記述します。

.. code-block:: text

    <?xml version='1.0' encoding='utf-8'?>
    <Context docBase="アプリケーションディレクトリ" />

docBase= にWARファイルを展開したディレクトリを指定します。

なお、WARファイルを展開せず、直接デプロイすることも可能です。
この場合は docBase にはディレクトリではなく WAR ファイルのパスを直接指定します。

