.. _file_update:

ファイルの更新アップロード
============================

.. http:put:: /1/(tenantId)/files/(bucketName)/(fileName)

    ファイルを更新アップロードする。

    :reqheader X-Application-Id: アプリケーションID(必須)
    :reqheader X-Application-Key: アプリケーションキー(必須)
    :reqheader X-Session-Token: セッショントークン(オプション)
    :reqheader Content-Type: ファイルの Content-Type (必須)

    :parameter string bucketName: バケット名
    :parameter string fileName: ファイル名

    :query string metaETag: メタデータ ETag 値
    :query string fileETag: ファイル ETag 値

    :statuscode 200: 正常登録した
    :statuscode 400: パラメータ・リクエストボディ不正
    :statuscode 401: 認証エラー
    :statuscode 403: 権限エラー
    :statuscode 404: 該当バケットまたはファイルが存在しない
    :statuscode 409:  ファイルがロック中（file_locked）、ETag 不一致（etag_mismatch）
    :statuscode	413: ファイルサイズ制限超過
    :statuscode 507: ファイルストレージの容量上限オーバー

    :>json string reasonCode: 409 Conflict の場合のエラー原因コード
    :>json object detail: 409 Conflict の場合のエラーデータ

    **リクエスト**

    リクエストボディにファイルデータ本体を格納する。

    ETag値（metaETag, fileETag）を指定した場合、サーバ側ファイルのETag値（metaETag, fileETag）が照合される。
    一致していなかった場合、409 Conflict エラーが返却される。レスポンスには、サーバ側のメタデータを含む JSON データが返却される。

    またサーバ側データが削除済みマークされていた場合でも更新することができ、削除済みマーク(“deleted”フィールド)をfalseにリセットする。

    **レスポンス**

    レスポンスボディには、更新したファイルのメタデータを含む JSON文字列が返却される。

    更新が成功した場合、fileETag フィールドに更新された ETag 値が格納される
    (データの内容に変更がない場合であっても、常に updatedAt とfileETag 値は更新される)。

    Conflictの場合はその原因をJSON形式で返す。

    **注意事項**

    * 本APIではACL は変更できない。ACLを変更したい場合はメタデータの更新 API を使用すること。
    * 同一名称のファイルがあった場合、上書きされる。書き込み権限がない場合は 403 エラーとなる。
    * バケットcontentACLと対象ファイルの update 権限が必要。
    * バケットcontentACL、および対象ファイルのread権限が無くても、上記のレスポンスが返却される。
