======================================
クイックスタート (RHEL 7/8, CentOS 7)
======================================

.. include:: ../../common/linkdef.rst

ここでは、BaaS APIサーバ/コンソールサーバ を RHEL 7/8, CentOS 7 にインストール・起動する手順を説明します。

なお、Ansible を使って自動デプロイするための Playbook を別途提供していますので、こちらをお使いいただくことを推奨します。 
Ansible Playbook は `こちら <https://nec-baas.github.io/downloads.html>`_ から入手できます。

以下は Ansible Playbook を使わず手動でインストールする場合の手順となります。

ulimit の設定
=============

/etc/security/limits.d/99-mongodb-nproc.conf に以下の内容の設定ファイルを新規作成してください。

::

    *          soft   nproc    64000
    *          hard   nproc    64000
    *          soft   nofile   64000
    *          hard   nofile   64000

SELinux の無効化
================

SELinux を無効化しておきます。/etc/selinux/config の SELINUX= の指定を
permissive または disabled に変更し、再起動を行って下さい。

JDK のインストール
===================

OpenJDK 17 をインストールしてください。

OpenJDK を使用する場合
----------------------

以下手順で OpenJDK をインストールしてください。

.. code-block:: bash

  # RHEL 7 / CentOS 7
  $ sudo yum install java-17-openjdk-headless

  # RHEL 8
  $ sudo dnf install java-17-openjdk-headless

Oracle Java SE Development Kit を使用する場合
-----------------------------------------------------

Oracle の `Java SE Downloads`_
から Oracle JDK の RPM ファイルをダウンロードしてください。

インストール手順は以下の通りです。
(Java のアップデートがされている場合は、バージョンの値は適宜修正してください)

.. code-block:: bash

 $ sudo yum localinstall jdk-8u301-linux-x64.rpm

Tomcat のインストール
=====================

Tomcat 10 をインストールします。

Tomcat を実行するユーザを作成します。

.. code-block:: bash

  $ sudo useradd --no-create-home -s /bin/bash tomcat

下記のコマンドでTomcatのバイナリを取得し、/opt/tomcat にインストールしてください。
Tomcat のバージョン番号は適宜読み替えてください。

.. code-block:: bash

  $ curl -O http://archive.apache.org/dist/tomcat/tomcat-10/v10.1.9/bin/apache-tomcat-10.1.9.tar.gz
  $ tar -xzvf ./apache-tomcat-10.1.9.tar.gz
  $ sudo mv  ./apache-tomcat-10.1.9 /opt/apache-tomcat-10.1.9
  $ sudo chown -R tomcat:tomcat /opt/apache-tomcat-10.1.9
  $ sudo ln -s /opt/apache-tomcat-10.1.9 /opt/tomcat

.. _tomcat_service_config:

起動設定
--------

Tomcat を起動するための systemd 用の Unit ファイルを作成します。

/etc/systemd/system/ ディレクトリに 'tomcat.service' という名前のファイルを作成してください。
例を以下に示します。

::

  [Unit]
  Description=Tomcat application server
  After=network.target

  [Service]
  Environment="JAVA_HOME=/etc/alternatives/jre"
  Environment="CATALINA_HOME=/opt/tomcat"
  Environment="CATALINA_BASE=/opt/tomcat"
  Environment="JAVA_OPTS=-Xmx2048m -Xms1024m"

  User=tomcat
  Group=tomcat
  Type=oneshot
  RemainAfterExit=yes

  ExecStart=/opt/tomcat/bin/startup.sh
  ExecStop=/opt/tomcat/bin/shutdown.sh
  
  [Install]
  WantedBy=multi-user.target

JAVA_OPTS に適切なオプションを設定するようにしてください。
ヒープサイズを指定するため -Xmx の設定が必須です。

以下手順で Tomcat を起動します。

.. code-block:: bash

  $ sudo systemctl daemon-reload
  $ sudo systemctl enable tomcat.service
  $ sudo systemctl start tomcat.service

server.xml の設定
-----------------

環境に合わせて、/opt/tomcat/conf/server.xml を編集してください。
(特に Connector 設定)

MongoDB のインストール
======================

MongoDB 4.0 以上をインストールします。

`Install MongoDB on Red Hat`_ の手順に従い、インストールを行ってください。

詳細な手順は以下のとおりです。
まず、/etc/yum.repos.d/ ディレクトリに mongodb-org-(MongoDBバージョン).repo ファイルを作成します。
以下の例は MongoDB 4.4 の場合の例です。

.. code-block:: ini

   [mongodb-org-4.4]
   name=MongoDB Repository
   baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.4/x86_64/
   gpgcheck=1
   enabled=1
   gpgkey=https://www.mongodb.org/static/pgp/server-4.4.asc

ついで、MongoDB をインストールします。

.. code-block:: bash

   $ sudo yum install -y mongodb-org

.. attention::

   MongoDB をアップグレードする場合はいくつか注意事項があります。
   詳細は :ref:`mongodb_upgrade` を参照してください。


ファイヤウォール設定
====================

必要に応じて、ファイヤウォールで TCP 8080 ポートの通信を許可します。

.. code-block:: bash

   $ sudo firewall-cmd --add-port 8080/tcp --permanent
   $ sudo firewall-cmd --reload

BaaS サーバのデプロイ
=======================

BaaS サーバのバイナリ(WAR ファイル)を Tomcat にデプロイします。

バイナリは api.war と console.war の２つがあります。前者は REST API サーバ、
後者はデベロッパコンソールサーバの実装になります。

.. code-block:: bash

 $ sudo /bin/rm -rf /opt/tomcat/webapps/console /opt/tomcat/webapps/api
 $ sudo cp api.war /opt/tomcat/webapps
 $ sudo cp console.war /opt/tomcat/webapps

Tomcat をリブートします。

.. code-block:: bash

 $ sudo systemctl restart tomcat

動作確認
========

ブラウザを開き、 ``http://[hostname:8080]/console`` (hostname はBaaSサーバを起動したサーバ名)
にアクセスし、正常にコンソールページが表示されることを確認してください。

また、 ``http://[hostname:8080]/api/`` にアクセスし、以下の JSON 応答が
表示されれば API サーバは正常稼働しています。

.. code-block:: javascript

  {"error":"Not Found"}

補足事項
========

本手順では、HTTP 8080 番ポートでサーバを起動しています。

実運用時は HTTPS 443 番ポートでリクエストを受け付けるようするか、前段にロードバランサやリバースプロキシ
を入れて HTTPS で通信するようにしてください。
具体的な手順は :doc:`/extended/revproxy` を参照してください。
